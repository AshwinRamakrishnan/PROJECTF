
.form-section {
    display: none;
}

.form-section.active {
    display: block;
}

.form-group {
    margin-bottom: 15px;
    position: relative;
}

.form-group label {
    font-weight: 100;
}

.input-container {
    position: relative;
    width: 100%;
}

.input-container input {
    width: 100%;
    padding: 10px 40px 10px 10px; /* Adjust padding to make room for the icon */
    border: 1px solid #ccc;
    border-radius: 20px;
    box-sizing: border-box;
}

.input-container .icon {
    position: absolute;
    right: 10px;
    top: 50%;
    transform: translateY(-50%);
    width: 20px;
    height: 20px;
}

.remember-forgot {
    display: flex;
    justify-content: space-between;
    font-size: 14.5px;
    margin: -8px 0 8px;
    color: #fff;
}

.button-container {
    text-align: center;
}

.button {
    width: 50%;
    padding: 10px;
    color: #dbdbdb;
    border: 2px solid rgba(255, 255, 255, .2);
    border-radius: 20px;
    cursor: pointer;
    transition: background-color 0.3s;
}

.button:hover {
    background-color: #39007a49;
    text-shadow: rgb(0, 0, 0);
}

.register-link a {
    color: #e9e9e9;
    text-shadow: black;
    display: inline-block;
}

.register-link a:hover {
    text-decoration: underline;
}

p {
    text-align: center;
}

:root {
    --backdrop: hsl(0 0% 60% / 0.12);
    --radius: 14;
    --border: 3;
    --backup-border: var(--backdrop);
    --size: 200;
}

article:first-of-type {
    --base: 80;
    --spread: 500;
    --outer: 1;
}

article:last-of-type {
    --outer: 1;
    --base: 220;
    --spread: 200;
}

*,
*:after,
*:before {
    box-sizing: border-box;
}

body {
    display: grid;
    place-items: center;
    min-height: 100vh;
    overflow: hidden;
    background: hsl(0, 0%, 0%);
   
   
}

.wrapper {
    position: relative;

}

article {
    background: transparent;
    width: 420px;
    text-align: left;
    backdrop-filter: blur(5px);
    box-shadow: 0 0 10px rgba(0, 0, 0, .2);
    padding: 30px 40px;
    border-radius: 10px;
    border: 2px solid rgba(255, 255, 255, .2);
}

main {
    display: flex;
    gap: 2rem;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    width: 120ch;
    max-width: calc(100vw - 2rem);
    position: relative;
}

[data-glow] {
    --border-size: calc(var(--border, 2) * 1px);
    --spotlight-size: calc(var(--size, 150) * 1px);
    --hue: calc(var(--base) + (var(--xp, 0) * var(--spread, 0)));
    background-image: radial-gradient(var(--spotlight-size) var(--spotlight-size) at calc(var(--x, 0) * 1px) calc(var(--y, 0) * 1px),
        hsl(var(--hue, 210) calc(var(--saturation, 100) * 1%) calc(var(--lightness, 70) * 1%) / var(--bg-spot-opacity, 0.1)), transparent);
    background-color: var(--backdrop, transparent);
    background-size: calc(100% + (2 * var(--border-size))) calc(100% + (2 * var(--border-size)));
    background-position: 50% 50%;
    background-attachment: fixed;
    border: var(--border-size) solid var(--backup-border);
    position: relative;
    touch-action: none;
}

[data-glow]::before,
[data-glow]::after {
    pointer-events: none;
    content: "";
    position: absolute;
    inset: calc(var(--border-size) * -1);
    border: var(--border-size) solid transparent;
    border-radius: calc(var(--radius) * 1px);
    background-attachment: fixed;
    background-size: calc(100% + (2 * var(--border-size))) calc(100% + (2 * var(--border-size)));
    background-repeat: no-repeat;
    background-position: 50% 50%;
    mask:
        linear-gradient(transparent, transparent),
        linear-gradient(white, white);
    mask-clip: padding-box, border-box;
    mask-composite: intersect;
}

[data-glow]::before {
    background-image: radial-gradient(calc(var(--spotlight-size) * 0.75) calc(var(--spotlight-size) * 0.75) at calc(var(--x, 0) * 1px) calc(var(--y, 0) * 1px),
        hsl(var(--hue, 210) calc(var(--saturation, 100) * 1%) calc(var(--lightness, 50) * 1%) / var(--border-spot-opacity, 1)), transparent 100%);
    filter: brightness(2);
}

[data-glow]::after {
    background-image: radial-gradient(calc(var(--spotlight-size) * 0.5) calc(var(--spotlight-size) * 0.5) at calc(var(--x, 0) * 1px) calc(var(--y, 0) * 1px),
        hsl(0 100% 100% / var(--border-light-opacity, 1)), transparent 100%);
}

[data-glow]>[data-glow]:not(:is(a, button)) {
    position: absolute;
    inset: 0;
    will-change: filter;
    opacity: var(--outer, 1);
}

[data-glow]>[data-glow]:not(:is(a, button)) {
    border-radius: calc(var(--radius) * 1px);
    border-width: calc(var(--border-size) * 20);
    filter: blur(calc(var(--border-size) * 10));
    background: none;
    pointer-events: none;
}

[data-glow]>[data-glow]:not(:is(a, button))::before {
    inset: -10px;
    border-width: 10px;
}

[data-glow]>[data-glow] {
    border: none;
}

[data-glow] :is(a, button) {
    border-radius: calc(var(--radius) * 1px);
    border: var(--border-size) solid transparent;
}

[data-glow] :is(a, button) [data-glow] {
    background: none;
}

[data-glow] :is(a, button) [data-glow]::before {
    inset: calc(var(--border-size) * -1);
    border-width: calc(var(--border-size) * 1);
}

article button {
    padding: 0.75rem 2rem;
    align-self: end;
    color: hsl(0 0% 80%);
}

button[data-glow] span {
    font-weight: bold;
    background-image: radial-gradient(var(--spotlight-size) var(--spotlight-size) at calc(var(--x, 0) * 1px) calc(var(--y, 0) * 1px),
        hsl(var(--hue, 210) calc(var(--saturation, 100) * 1%) calc(var(--lightness, 70) * 1%) / var(--bg-spot-opacity, 1)), transparent);
    background-color: var(--backdrop, transparent);
    background-position: 50% 50%;
    background-attachment: fixed;
    background-clip: text;
    filter: brightness(1.5);
    color: transparent;
    border: 2px solid rgb(0, 0, 0);
}
